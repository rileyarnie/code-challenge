{"version":3,"sources":["components/Loader/Loader.js","components/Content/Content.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Loader","className","Content","useState","categories","setCategories","jokeCategory","setJokeCategory","joke","setJoke","loading","setLoading","handleJoke","useCallback","axios","get","then","value","data","catch","err","console","log","useEffect","htmlFor","onChange","event","target","id","map","category","index","src","alt","onClick","Navbar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUASeA,G,MANA,WACX,OACI,sBAAKC,UAAU,eAAf,UAA8B,wBAAW,wBAAW,6BCwE7CC,EAxEC,WAAO,IAAD,EAEkBC,mBAAS,IAF3B,mBAEXC,EAFW,KAECC,EAFD,OAGsBF,mBAAS,MAH/B,mBAGXG,EAHW,KAGGC,EAHH,OAIMJ,mBAAS,IAJf,mBAIXK,EAJW,KAILC,EAJK,OAKYN,oBAAS,GALrB,mBAKXO,EALW,KAKFC,EALE,KAOZC,EAAaC,uBAAY,WAC3BP,GAAgBQ,IAAMC,IAAN,2DAA8DT,IAAgBU,MAAK,YAA0B,IAAfC,EAAc,EAAtBC,KAAQD,MAC1GN,GAAW,GACXF,EAAQQ,MACTE,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEjB,CAACd,IAGJiB,qBAAU,WACNT,IAAMC,IAAI,+CAA+CC,MAAK,YAAe,IAAZE,EAAW,EAAXA,KAC7Db,EAAca,GACdP,GAAW,MACZQ,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEjB,IAEHG,qBAAU,WACNX,MACD,CAACA,IASJ,OACI,mCACIF,EAAU,cAAC,EAAD,IAEN,sBAAKT,UAAU,UAAf,UACI,sBAAKA,UAAU,UAAf,UACI,uBAAOuB,QAAQ,aAAf,wCACA,yBAAQC,SAdC,SAACC,GAC1Bf,GAAW,GAEXJ,EAAgBmB,EAAMC,OAAOV,QAW2BW,GAAG,aAA3C,UACI,iCAAUtB,GAA8B,KACvCF,EAAWyB,KAAI,SAACC,EAAUC,GAAX,OACZ,wBAAoBd,MAAOa,EAA3B,SAAsCA,GAAzBC,YAMrBzB,EAEI,qCACI,sBAAKL,UAAU,OAAf,UACI,qBAAK+B,IAAI,8DAA8DC,IAAI,SAC3E,mBAAGhC,UAAU,OAAb,SACKO,OAGT,yBAAQP,UAAU,aAAaiC,QAAS,kBAAMtB,KAA9C,yBAAyEN,EAAc,IAAvF,aAEF,oBAAIL,UAAU,aAAd,4CC1DfkC,G,MARA,WACX,OACI,qBAAKlC,UAAU,SAAf,SACI,wDCQGmC,MAVf,WACE,OACE,sBAAKnC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvB,MAAK,YAAkD,IAA/CwB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2bf09fef.chunk.js","sourcesContent":["import React from 'react'\nimport \"./Loader.css\"\n\nconst Loader = () => {\n    return (\n        <div className=\"lds-facebook\"><div></div><div></div><div></div></div>\n    )\n}\n\nexport default Loader\n","import React, { useCallback, useEffect, useState } from 'react'\nimport \"./Content.css\"\nimport axios from \"axios\"\nimport Loader from \"../Loader/Loader.js\"\n\nconst Content = () => {\n\n    const [categories, setCategories] = useState([])\n    const [jokeCategory, setJokeCategory] = useState(null)\n    const [joke, setJoke] = useState(\"\")\n    const [loading, setLoading] = useState(true)\n\n    const handleJoke = useCallback(() => {\n        jokeCategory && axios.get(`https://api.chucknorris.io/jokes/random?category=${jokeCategory}`).then(({ data: { value } }) => {\n            setLoading(false);\n            setJoke(value);\n        }).catch((err) => {\n            console.log(err)\n        })\n    }, [jokeCategory]\n    )\n\n    useEffect(() => {\n        axios.get(\"https://api.chucknorris.io/jokes/categories\").then(({ data }) => {\n            setCategories(data);\n            setLoading(false)\n        }).catch((err) => {\n            console.log(err)\n        })\n    }, [])\n\n    useEffect(() => {\n        handleJoke()\n    }, [handleJoke])\n\n    const handleCategoryChange = (event) => {\n        setLoading(true)\n\n        setJokeCategory(event.target.value)\n\n    }\n\n    return (\n        <>{\n            loading ? <Loader /> :\n\n                <div className=\"content\">\n                    <div className=\"options\">\n                        <label htmlFor=\"categories\"> Choose a joke  category: </label>\n                        <select onChange={handleCategoryChange} id=\"categories\">\n                            <option >{jokeCategory ? jokeCategory : \"\"}</option>\n                            {categories.map((category, index) => (\n                                <option key={index} value={category}>{category}</option>\n                            ))}\n\n                        </select>\n                    </div>\n                    {\n                        jokeCategory ?\n\n                            <>\n                                <div className=\"card\">\n                                    <img src=\"https://assets.chucknorris.host/img/avatar/chuck-norris.png\" alt=\"logo\" />\n                                    <p className=\"joke\">\n                                        {joke}\n                                    </p>\n                                </div>\n                                <button className=\"jokeButton\" onClick={() => handleJoke()}>Get another {jokeCategory}{\" \"}joke</button>\n                            </>\n                            : <h3 className=\"selectJoke\">please select a category</h3>\n                    }\n                </div>\n        }\n        </>\n    )\n}\n\nexport default Content\n","import React from 'react'\nimport \"./Navbar.css\"\n\nconst Navbar = () => {\n    return (\n        <nav className=\"navbar\">\n            <h3>Chuck Norris Jokes</h3>\n        </nav>\n    )\n}\n\nexport default Navbar\n","import './App.css';\nimport Content from './components/Content/Content';\nimport Navbar from './components/Navbar/Navbar';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      <Content />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}